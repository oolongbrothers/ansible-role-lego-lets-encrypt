---

# Main directory for certificates and lego
lets_encrypt_directory_path: "/etc/ssl/letsencrypt"

lets_encrypt_lego_archive_http_path: "https://github.com/go-acme/lego/releases/download/v4.4.0/lego_v4.4.0_linux_amd64.tar.gz"
lets_encrypt_lego_archive_http_path_sha256: "302a780a56dd52601aa5d1dc31e607599cb85b113830abe464001622ca8b80a2"

# if you change this, lego will not be able to bind to ports 80/443 by default, read here: https://go-acme.github.io/lego/usage/cli/#running-without-root-privileges
lets_encrypt_client_user: root

#lets_encrypt_resource_name: "lego_resource_key"

lets_encrypt_account_email: "mail@sitewards.com"

# number of days before expiry the renewal will be performed
lets_encrypt_renew_limit: 30

# Enable this to get a single .pem file with certs and private key concatenated (like e.g. HAproxy expects)
lets_encrypt_create_concatenated_pem_file: false

# Optional service to automatically download data for OCSP stapeling
lets_encrypt_ocsp_service: false
# By default, the must staple extension will be enabled if the OCSP service is used
lets_encrypt_ocsp_must_staple: "{{ lets_encrypt_ocsp_service }}"
# If not overridden, will be run every night at 2:00
# For format, see https://www.freedesktop.org/software/systemd/man/systemd.time.html#Calendar%20Events
lets_encrypt_ocsp_manager_timer_oncalendar: "*-*-* 2:30:00"

# If not overridden, will be run every Friday at 11:15
# For format, see https://www.freedesktop.org/software/systemd/man/systemd.time.html#Calendar%20Events
lets_encrypt_cert_manager_timer_oncalendar: "Fri *-*-* 2:15:00"

# Optional notification service to be notified in case creation/renewal fails
# lets_encrypt_service_notify_on_failure: "email-notification@%n.service"

# Use external CSR to specify metadata in certificate, in incompatible with lets_encrypt_create_concatenated_pem_file
lets_encrypt_use_external_csr: true
#lets_encrypt_resource_name: "lego_resource_key"

# links the certificate to system CA folder,
# to allow localhost connections when staging certs are used.
# DO NOT USE ON PRODUCTION
lets_encrypt_install_as_trusted: false

##
# Challenge Server (live or dev/staging)
# Dev and staging environments should be configured to use the
# staging challenge server to avoid blocks to many recent requests
#
# Live:
#lets_encrypt_server: "https://acme-v02.api.letsencrypt.org/directory"
# Staging:
#lets_encrypt_server: "https://acme-staging-v02.api.letsencrypt.org/directory"

##
# Resource defaults, ie values applied to all certificates if per item values are present
#
#lets_encrypt_common_name: "somedomain.sitewards.net"
#lets_encrypt_csr_country_name: "DE"
#lets_encrypt_csr_locality_name: "Hesse"
#lets_encrypt_csr_organization_name: "Sitewards GmbH"
#lets_encrypt_csr_organizational_unit_name: "Engineering"
#lets_encrypt_csr_email_address: "mail@sitewards.com"

##
# List of resources rquiring lets encrypt certificates
#
# Full list of supported dns providers:
# https://go-acme.github.io/lego/dns/
#
# Example:
# lets_encrypt_resources:
#   - common_name: "somedomain1.sitewards.net"
#     challenge: "dns"
#     provider: "route53"
#     alt_names:
#       - "somedomain1.sitewards.net"
#       - "www.somedomain1.sitewards.net"
#   - common_name: "somedomain2.sitewards.net"
#     challenge: "http"
#     webroot: "/var/www/html/somedomain2"
#     alt_names:
#       - "somedomain2.sitewards.net"
#       - "www.somedomain2.sitewards.net"
#   - common_name: "somedomain3.sitewards.net"
#     challenge: "http"
#     webroot: "/var/www/html/somedomain3"
#     country_name: "DE"
#     locality_name: "Hesse"
#     organization_name: "Sitewards GmbH"
#     organizational_unit_name: "Engineering"
#     email: "support@sitewards.com"
#     alt_names:
#       - "somedomain3.sitewards.net"
#       - "www.somedomain3.sitewards.net"
#     environment_variables:
#       - key: DNS_PROVIDER_API_USER
#         value: api_user
#       - key: DNS_PROVIDER_API_KEY
#         value: api_key
